{"/home/travis/build/npmtest/node-npmtest-ytdl-core/test.js":"/* istanbul instrument in package npmtest_ytdl_core */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ytdl-core/lib.npmtest_ytdl_core.js":"/* istanbul instrument in package npmtest_ytdl_core */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_ytdl_core = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_ytdl_core = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-ytdl-core/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-ytdl-core && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_ytdl_core */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_ytdl_core\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_ytdl_core.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_ytdl_core.rollup.js'] =\n            local.assetsDict['/assets.npmtest_ytdl_core.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_ytdl_core.__dirname +\n                    '/lib.npmtest_ytdl_core.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ytdl-core/node_modules/ytdl-core/lib/index.js":"var PassThrough = require('stream').PassThrough;\nvar request     = require('./request');\nvar getInfo     = require('./info');\nvar util        = require('./util');\nvar cache       = require('./cache');\n\n\n/**\n * @param {String} link\n * @param {!Object} options\n * @return {ReadableStream}\n */\nvar ytdl = module.exports = function ytdl(link, options) {\n  var stream = createStream(options);\n  getInfo(link, options, function(err, info) {\n    if (err) {\n      stream.emit('error', err);\n      return;\n    }\n\n    downloadFromInfoCallback(stream, info, options);\n  });\n\n  return stream;\n};\n\n\nytdl.getInfo = getInfo;\nytdl.chooseFormat = util.chooseFormat;\nytdl.filterFormats = util.filterFormats;\nytdl.cache = cache;\n\n\nfunction createStream(options) {\n  var stream = new PassThrough({\n    highWaterMark: options && options.highWaterMark || null,\n  });\n  stream.destroy = function() { stream._isDestroyed = true; };\n  return stream;\n}\n\n\n/**\n * Chooses a format to download.\n *\n * @param {stream.Readable} stream\n * @param {Object} info\n * @param {Object} options\n */\nfunction downloadFromInfoCallback(stream, info, options) {\n  options = options || {};\n  var format = util.chooseFormat(info.formats, options);\n  if (format instanceof Error) {\n    // The caller expects this function to be async.\n    setImmediate(function() {\n      stream.emit('error', format);\n    });\n    return;\n  }\n  stream.emit('info', info, format);\n\n  var url = format.url;\n  if (options.begin) {\n    url += '&begin=' + util.fromHumanTime(options.begin);\n  }\n\n  doDownload(stream, url, options, 3, {\n    trys: 5,\n    range: {\n      start: options.range && options.range.start ? options.range.start : 0,\n      end: options.range && options.range.end ? options.range.end : -1,\n    },\n    downloaded: 0,\n  });\n}\n\n\nvar redirectCodes = new Set([301, 302, 303, 307]);\n\n/**\n * Tries to download the video. Youtube might respond with a redirect\n * status code. In which case, this function will call itself again.\n *\n * @param {stream.Readable} stream\n * @param {String} url\n * @param {Object} options\n * @param {Number} tryCount Prevent infinite redirects.\n * @param {Object} reconnectInfo Continue after ECONNRESET\n */\nfunction doDownload(stream, url, options, tryCount, reconnectInfo) {\n  if (stream._isDestroyed) { return; }\n  if (tryCount === 0) {\n    stream.emit('error', new Error('Too many redirects'));\n    return;\n  }\n  if (reconnectInfo.trys === 0) {\n    stream.emit('error', new Error('Too many reconnects'));\n    return;\n  }\n\n  // Start downloading the video.\n  var myrequest = options.request || request;\n  var rangedUrl = url;\n  if (reconnectInfo.downloaded !== 0 ||\n      reconnectInfo.range.start !== 0 ||\n      reconnectInfo.range.end !== -1) {\n    var start = reconnectInfo.range.start + reconnectInfo.downloaded;\n    var end = reconnectInfo.range.end != -1 ? reconnectInfo.range.end : '';\n    rangedUrl += '&range=' + start + '-' + end;\n  }\n  var req = myrequest(rangedUrl, options.requestOptions);\n\n  var myres;\n  stream.destroy = function() {\n    stream._isDestroyed = true;\n    req.abort();\n    if (myres) {\n      myres.unpipe();\n      myres.destroy();\n    }\n    stream.emit('abort');\n  };\n\n  req.on('error', function(err) {\n    if (stream._isDestroyed || !myres) {\n      stream.emit('error', err);\n    }\n  });\n\n  req.on('response', function(res) {\n    myres = res;\n    if (stream._isDestroyed) { return; }\n    // Support for Streaming 206 status videos\n    if (res.statusCode !== 200 && res.statusCode !== 206) {\n      if (redirectCodes.has(res.statusCode)) {\n        // Redirection header.\n        doDownload(stream, res.headers.location, options, tryCount - 1, reconnectInfo);\n        return;\n      }\n      stream.emit('response', res);\n      stream.emit('error', new Error('Status code ' + res.statusCode));\n      return;\n    }\n\n    if (reconnectInfo.downloaded === 0) {\n      reconnectInfo.total = parseInt(res.headers['content-length']);\n    }\n\n    // Keep track of the download progress\n    res.on('data', function(chunk) {\n      var downloaded = reconnectInfo.downloaded += chunk.length;\n      stream.emit('progress', chunk.length, downloaded, reconnectInfo.total);\n    });\n\n    res.on('end', function() {\n      // Reconnect if there is more to be downloaded.\n      if (reconnectInfo.downloaded < reconnectInfo.total) {\n        reconnectInfo.trys = reconnectInfo.trys - 1;\n        doDownload(stream, url, options, tryCount, reconnectInfo);\n      } else {\n        stream.end();\n      }\n    });\n\n    res.pipe(stream, {end : false});\n    stream.emit('response', res);\n  });\n\n  stream.emit('request', req);\n}\n\n\n/**\n * Can be used to download video after its `info` is gotten through\n * `ytdl.getInfo()`. In case the user might want to look at the\n * `info` object before deciding to download.\n *\n * @param {Object} info\n * @param {!Object} options\n */\nytdl.downloadFromInfo = function(info, options) {\n  var stream = createStream(options);\n  setImmediate(function() {\n    downloadFromInfoCallback(stream, info, options);\n  });\n  return stream;\n};\n","/home/travis/build/npmtest/node-npmtest-ytdl-core/node_modules/ytdl-core/lib/request.js":"var http  = require('http');\nvar https = require('https');\nvar parse = require('url').parse;\nvar util  = require('./util');\n\nvar httpLibs = { 'http:': http, 'https:': https };\n\n/**\n * @param {String} url\n * @param {Object} options\n * @param {Function(Error, String)} callback\n * @return http.ClientRequest\n */\nmodule.exports = function(url, options, callback) {\n  var parsed = parse(url);\n  var httpLib = httpLibs[parsed.protocol];\n  if (!httpLib) {\n    var err = new Error('Invalid URL: ' + url);\n    if (callback) {\n      callback(err);\n    } else {\n      throw err;\n    }\n    return;\n  }\n\n  util.objectAssign(parsed, options, true);\n  var req = httpLib.get(parsed);\n  if (callback) {\n    req.on('response', function(res) {\n      // Support for Streaming 206 status videos\n      if (res.statusCode !== 200 && res.statusCode !== 206) {\n        callback(new Error('Status code ' + res.statusCode));\n        return;\n      }\n\n      var body = '';\n      res.setEncoding('utf8');\n      res.on('data', function(chunk) {\n        body += chunk;\n      });\n      res.on('end', function() {\n        callback(null, body);\n      });\n    });\n    req.on('error', callback);\n  }\n  return req;\n};\n","/home/travis/build/npmtest/node-npmtest-ytdl-core/node_modules/ytdl-core/lib/util.js":"var qs       = require('querystring');\nvar url      = require('url');\nvar Entities = require('html-entities').AllHtmlEntities;\nvar FORMATS  = require('./formats');\n\n\nvar VIDEO_URL = 'https://www.youtube.com/watch?v=';\n\n\n/**\n * Parses a string representation of amount of milliseconds.\n *\n * @param {String} time\n * @return {Number}\n */\nvar timeRegexp = /(?:(\\d+)h)?(?:(\\d+)m(?!s))?(?:(\\d+)s)?(?:(\\d+)(?:ms)?)?/;\nexports.parseTime = function(time) {\n  var result = timeRegexp.exec(time.toString());\n  var hours  = result[1] || 0;\n  var mins   = result[2] || 0;\n  var secs   = result[3] || 0;\n  var ms     = result[4] || 0;\n\n  return hours * 3600000 + mins * 60000 + secs * 1000 + parseInt(ms, 10);\n};\n\n\n// Use these to help sort formats, higher is better.\nvar audioEncodingRanks = {\n  mp3: 1,\n  vorbis: 2,\n  aac: 3,\n  opus: 4,\n  flac: 5,\n};\nvar videoEncodingRanks = {\n  'Sorenson H.283': 1,\n  'MPEG-4 Visual': 2,\n  'VP8': 3,\n  'VP9': 4,\n  'H.264': 5,\n};\n\n\n/**\n * Sort formats from highest quality to lowest.\n * By resolution, then video bitrate, then audio bitrate.\n *\n * @param {Object} a\n * @param {Object} b\n */\nexports.sortFormats = function(a, b) {\n  var ares = a.resolution ? parseInt(a.resolution.slice(0, -1), 10) : 0;\n  var bres = b.resolution ? parseInt(b.resolution.slice(0, -1), 10) : 0;\n  var afeats = ~~!!ares * 2 + ~~!!a.audioBitrate;\n  var bfeats = ~~!!bres * 2 + ~~!!b.audioBitrate;\n\n  function getBitrate(c) {\n    if (c.bitrate) {\n      var s = c.bitrate.split('-');\n      return parseFloat(s[s.length - 1], 10);\n    } else {\n      return 0;\n    }\n  }\n\n  function audioScore(c) {\n    var abitrate = c.audioBitrate || 0;\n    var aenc = audioEncodingRanks[c.audioEncoding] || 0;\n    return abitrate + aenc / 10;\n  }\n\n  if (afeats === bfeats) {\n    if (ares === bres) {\n      var avbitrate = getBitrate(a);\n      var bvbitrate = getBitrate(b);\n      if (avbitrate === bvbitrate) {\n        var aascore = audioScore(a);\n        var bascore = audioScore(b);\n        if (aascore === bascore) {\n          var avenc = videoEncodingRanks[a.encoding] || 0;\n          var bvenc = videoEncodingRanks[b.encoding] || 0;\n          return bvenc - avenc;\n        } else {\n          return bascore - aascore;\n        }\n      } else {\n        return bvbitrate - avbitrate;\n      }\n    } else {\n      return bres - ares;\n    }\n  } else {\n    return bfeats - afeats;\n  }\n};\n\n\n/**\n * Choose a format depending on the given options.\n *\n * @param {Array.<Object>} formats\n * @param {Object} options\n * @return {Object|Error}\n */\nexports.chooseFormat = function(formats, options) {\n\n  if (typeof options.format === 'object') {\n    return options.format;\n  }\n\n  if (options.filter) {\n    formats = exports.filterFormats(formats, options.filter);\n    if (formats.length === 0) {\n      return new Error('No formats found with custom filter');\n    }\n  }\n\n  var format;\n  var quality = options.quality || 'highest';\n  switch (quality) {\n  case 'highest':\n    format = formats[0];\n    break;\n\n  case 'lowest':\n    format = formats[formats.length - 1];\n    break;\n\n  default:\n    var getFormat = function(itag) {\n      for (var i = 0, len = formats.length; i < len; i++) {\n        if (formats[i].itag === '' + itag) {\n          return formats[i];\n        }\n      }\n      return null;\n    };\n    if (Array.isArray(quality)) {\n      for (var i = 0, len = quality.length; i < len; i++) {\n        format = getFormat(quality[i]);\n        if (format) { break; }\n      }\n    } else {\n      format = getFormat(quality);\n    }\n\n  }\n\n  if (!format) {\n    return new Error('No such format found: ' + quality);\n  } else if (format.rtmp) {\n    return new Error('rtmp protocol not supported');\n  }\n  return format;\n};\n\n\n/**\n * @param {Array.<Object>} formats\n * @param {Function} filter\n * @return {Array.<Object>}\n */\nexports.filterFormats = function(formats, filter) {\n  var fn;\n  switch (filter) {\n  case 'video':\n    fn = function(format) { return format.bitrate; };\n    break;\n\n  case 'videoonly':\n    fn = function(format) { return format.bitrate && !format.audioBitrate; };\n    break;\n\n  case 'audio':\n    fn = function(format) { return format.audioBitrate; };\n    break;\n\n  case 'audioonly':\n    fn = function(format) { return !format.bitrate && format.audioBitrate; };\n    break;\n\n  default:\n    fn = filter;\n  }\n  return formats.filter(fn);\n};\n\n\n/**\n * Extract string inbetween another.\n *\n * @param {String} haystack\n * @param {String} left\n * @param {String} right\n * @return {String}\n */\nexports.between = function(haystack, left, right) {\n  var pos;\n  pos = haystack.indexOf(left);\n  if (pos === -1) { return ''; }\n  haystack = haystack.slice(pos + left.length);\n  pos = haystack.indexOf(right);\n  if (pos === -1) { return ''; }\n  haystack = haystack.slice(0, pos);\n  return haystack;\n};\n\n\n/**\n * Get video ID.\n *\n * There are a few type of video URL formats.\n *  - http://www.youtube.com/watch?v=VIDEO_ID\n *  - http://m.youtube.com/watch?v=VIDEO_ID\n *  - http://youtu.be/VIDEO_ID\n *  - http://www.youtube.com/v/VIDEO_ID\n *  - http://www.youtube.com/embed/VIDEO_ID\n *\n * @param {String} link\n * @return {String}\n */\nvar idRegex = /^[a-zA-Z0-9-_]{11}$/;\nexports.getVideoID = function(link) {\n  if (idRegex.test(link)) {\n    return link;\n  }\n  var parsed = url.parse(link, true);\n  var id = parsed.query.v;\n  if (parsed.hostname === 'youtu.be' ||\n      (parsed.hostname === 'youtube.com' ||\n       parsed.hostname === 'www.youtube.com') && !id) {\n    var s = parsed.pathname.split('/');\n    id = s[s.length - 1];\n  }\n  if (!id) {\n    return new Error('No video id found: ' + link);\n  }\n  if (!idRegex.test(id)) {\n    return new Error('Video id (' + id + ') does not match expected format (' + idRegex.toString() + ')');\n  }\n  return id;\n};\n\n\n/**\n * @param {Object} info\n * @param {Boolean} debug\n * @return {Array.<Object>}\n */\nexports.parseFormats = function(info, debug) {\n  var formats = [];\n  if (info.url_encoded_fmt_stream_map) {\n    formats = formats\n      .concat(info.url_encoded_fmt_stream_map.split(','));\n  }\n  if (info.adaptive_fmts) {\n    formats = formats.concat(info.adaptive_fmts.split(','));\n  }\n\n  formats = formats\n    .map(function(format) {\n      var data = qs.parse(format);\n      var meta = FORMATS[data.itag];\n      if (!meta && debug) {\n        console.warn('No format metadata for itag ' + data.itag + ' found');\n      }\n\n      for (var key in meta) {\n        data[key] = meta[key];\n      }\n\n      return data;\n    });\n  delete info.url_encoded_fmt_stream_map;\n  delete info.adaptive_fmts;\n\n  return formats;\n};\n\n\n/**\n * Get video description from html\n *\n * @param {String} html\n * @return {String}\n */\nexports.getVideoDescription = function(html) {\n  var regex = /<p.*?id=\"eow-description\".*?>(.+?)<\\/p>[\\n\\r\\s]*?<\\/div>/im;\n  var description = html.match(regex);\n  return description ? new Entities().decode(description[1]\n    .replace(/\\n/g, ' ')\n    .replace(/\\s*<\\s*br\\s*\\/?\\s*>\\s*/gi, '\\n')\n    .replace(/<\\s*\\/\\s*p\\s*>\\s*<\\s*p[^>]*>/gi, '\\n')\n    .replace(/<.*?>/gi, '')).trim() : ''\n    ;\n};\n\n\n/**\n * Get video Owner from html.\n *\n * @param {String} body\n * @return {Object}\n */\nvar authorRegexp = /<a href=\"\\/channel\\/([\\w-]+)\"[^>]+>(.+?(?=<\\/a>))/;\nvar aliasRegExp = /<a href=\"\\/user\\/([^\"]+)/;\nexports.getAuthor = function(body) {\n  var ownerinfo = exports.between(body, '<div id=\"watch7-user-header\" class=\" spf-link \">', '<div id=\"watch8-action-buttons\" class=\"watch-action-buttons clearfix\">');\n  if (ownerinfo === '') {\n    return {};\n  }\n  ownerinfo = new Entities().decode(ownerinfo);\n  var channelMatch = ownerinfo.match(authorRegexp);\n  var userMatch = ownerinfo.match(aliasRegExp);\n  return {\n    id: channelMatch[1],\n    name: channelMatch[2],\n    avatar: url.resolve(VIDEO_URL, exports.between(ownerinfo, 'data-thumb=\"', '\"')),\n    user: userMatch ? userMatch[1] : null,\n    channel_url: 'https://www.youtube.com/channel/' + channelMatch[1],\n    user_url: userMatch ? 'https://www.youtube.com/user/' + userMatch[1] : null,\n  };\n};\n\n\n/**\n * Get video published at from html.\n *\n * @param {String} body\n * @return {String}\n */\nexports.getPublished = function(body) {\n  return Date.parse(exports.between(body, '<meta itemprop=\"datePublished\" content=\"', '\">'));\n};\n\n\n/**\n * Get video published at from html.\n * Credits to https://github.com/paixaop.\n *\n * @param {String} body\n * @return {Array.<Object>}\n */\nexports.getRelatedVideos = function(body) {\n  var jsonStr = exports.between(body, '\\'RELATED_PLAYER_ARGS\\': {\"rvs\":', '},');\n  try {\n    jsonStr = JSON.parse(jsonStr);\n  }\n  catch (err) {\n    return [];\n  }\n  return jsonStr.split(',').map(function(link) {\n    return qs.parse(link);\n  });\n};\n\n\n/**\n * @param {Array.<Function>} funcs\n * @param {Function(!Error, Array.<Object>)} callback\n */\nexports.parallel = function(funcs, callback) {\n  var funcsDone = 0;\n  var len = funcs.length;\n  var errGiven = false;\n  var results = [];\n\n  function checkDone(index, err, result) {\n    if (errGiven) { return; }\n    if (err) {\n      errGiven = true;\n      callback(err);\n      return;\n    }\n    results[index] = result;\n    if (++funcsDone === len) {\n      callback(null, results);\n    }\n  }\n\n  if (len > 0) {\n    for (var i = 0; i < len; i++) {\n      funcs[i](checkDone.bind(null, i));\n    }\n  } else {\n    callback(null, results);\n  }\n};\n\n\n/**\n * (Deep) assign object to another.\n *\n * @param {Object} target\n * @param {Object} source\n * @param {boolean} deep\n */\nexports.objectAssign = function(target, source, deep) {\n  for (var key in source) {\n    if (deep && typeof source[key] === 'object' && source[key] != null &&\n        target[key]) {\n      exports.objectAssign(target[key], source[key]);\n    } else {\n      target[key] = source[key];\n    }\n  }\n  return target;\n};\n\n\n/**\n * Converts human friendly time to milliseconds. Supports the format\n * 00:00:00.000 for hours, minutes, seconds, and milliseconds respectively.\n * And 0ms, 0s, 0m, 0h, and together 1m1s.\n *\n * @param {String|Number} time\n * @return {Number}\n */\nvar numberFormat = /^\\d+$/;\nvar timeFormat = /^(?:(?:(\\d+):)?(\\d{1,2}):)?(\\d{1,2})(?:\\.(\\d{3}))?$/;\nvar timeUnits = {\n  ms: 1,\n  s: 1000,\n  m: 60000,\n  h: 3600000,\n};\nexports.fromHumanTime = function(time) {\n  if (typeof time === 'number') { return time; }\n  if (numberFormat.test(time)) { return +time; }\n  var firstFormat = timeFormat.exec(time);\n  if (firstFormat) {\n    return +(firstFormat[1] || 0) * timeUnits.h +\n      +(firstFormat[2] || 0) * timeUnits.m +\n      +(firstFormat[3] || 0) * timeUnits.s +\n      +(firstFormat[4] || 0);\n  } else {\n    var total = 0;\n    var r = /(\\d+)(ms|s|m|h)/g;\n    var rs;\n    while ((rs = r.exec(time)) != null) {\n      total += +rs[1] * timeUnits[rs[2]];\n    }\n    return total;\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-ytdl-core/node_modules/ytdl-core/lib/formats.js":"/**\n * http://en.wikipedia.org/wiki/YouTube#Quality_and_formats\n */\nmodule.exports = {\n\n  '5': {\n    container: 'flv',\n    resolution: '240p',\n    encoding: 'Sorenson H.283',\n    profile: null,\n    bitrate: '0.25',\n    audioEncoding: 'mp3',\n    audioBitrate: 64,\n  },\n\n  '6': {\n    container: 'flv',\n    resolution: '270p',\n    encoding: 'Sorenson H.263',\n    profile: null,\n    bitrate: '0.8',\n    audioEncoding: 'mp3',\n    audioBitrate: 64,\n  },\n\n  '13': {\n    container: '3gp',\n    resolution: null,\n    encoding: 'MPEG-4 Visual',\n    profile: null,\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: null,\n  },\n\n  '17': {\n    container: '3gp',\n    resolution: '144p',\n    encoding: 'MPEG-4 Visual',\n    profile: 'simple',\n    bitrate: '0.05',\n    audioEncoding: 'aac',\n    audioBitrate: 24,\n  },\n\n  '18': {\n    container: 'mp4',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: 'baseline',\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '22': {\n    container: 'mp4',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '2-3',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '34': {\n    container: 'flv',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '35': {\n    container: 'flv',\n    resolution: '480p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.8-1',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '36': {\n    container: '3gp',\n    resolution: '240p',\n    encoding: 'MPEG-4 Visual',\n    profile: 'simple',\n    bitrate: '0.175',\n    audioEncoding: 'aac',\n    audioBitrate: 36,\n  },\n\n  '37': {\n    container: 'mp4',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '3-5.9',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '38': {\n    container: 'mp4',\n    resolution: '3072p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '3.5-5',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '43': {\n    container: 'webm',\n    resolution: '360p',\n    encoding: 'VP8',\n    profile: null,\n    bitrate: '0.5',\n    audioEncoding: 'vorbis',\n    audioBitrate: 128,\n  },\n\n  '44': {\n    container: 'webm',\n    resolution: '480p',\n    encoding: 'VP8',\n    profile: null,\n    bitrate: '1',\n    audioEncoding: 'vorbis',\n    audioBitrate: 128,\n  },\n\n  '45': {\n    container: 'webm',\n    resolution: '720p',\n    encoding: 'VP8',\n    profile: null,\n    bitrate: '2',\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  '46': {\n    container: 'webm',\n    resolution: '1080p',\n    encoding: 'vp8',\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  '82': {\n    container: 'mp4',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: '3d',\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '83': {\n    container: 'mp4',\n    resolution: '240p',\n    encoding: 'H.264',\n    profile: '3d',\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '84': {\n    container: 'mp4',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: '3d',\n    bitrate: '2-3',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '85': {\n    container: 'mp4',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: '3d',\n    bitrate: '3-4',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '100': {\n    container: 'webm',\n    resolution: '360p',\n    encoding: 'VP8',\n    profile: '3d',\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 128,\n  },\n\n  '101': {\n    container: 'webm',\n    resolution: '360p',\n    encoding: 'VP8',\n    profile: '3d',\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  '102': {\n    container: 'webm',\n    resolution: '720p',\n    encoding: 'VP8',\n    profile: '3d',\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  // DASH (video only)\n  '133': {\n    container: 'mp4',\n    resolution: '240p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.2-0.3',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '134': {\n    container: 'mp4',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.3-0.4',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '135': {\n    container: 'mp4',\n    resolution: '480p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.5-1',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '136': {\n    container: 'mp4',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '1-1.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '137': {\n    container: 'mp4',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '2-3',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '138': {\n    container: 'mp4',\n    resolution: '2160p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '13.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '160': {\n    container: 'mp4',\n    resolution: '144p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.1',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '242': {\n    container: 'webm',\n    resolution: '240p',\n    encoding: 'VP9',\n    profile: null,\n    bitrate: '0.14',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '243': {\n    container: 'webm',\n    resolution: '360p',\n    encoding: 'VP9',\n    profile: null,\n    bitrate: '0.26',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '244': {\n    container: 'webm',\n    resolution: '480p',\n    encoding: 'VP9',\n    profile: null,\n    bitrate: '0.585',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '247': {\n    container: 'webm',\n    resolution: '720p',\n    encoding: 'VP9',\n    profile: null,\n    bitrate: '1.184',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '248': {\n    container: 'webm',\n    resolution: '1080p',\n    encoding: 'VP9',\n    profile: null,\n    bitrate: '1.895',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '264': {\n    container: 'mp4',\n    resolution: '1440p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '4-5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '266': {\n    container: 'mp4',\n    resolution: '2160p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '12.5-13.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '271': {\n    container: 'webm',\n    resolution: '1440p',\n    encoding: 'VP9',\n    profile: null,\n    bitrate: '9',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '272': {\n    container: 'webm',\n    resolution: '2160p',\n    encoding: 'VP9',\n    profile: null,\n    bitrate: '20',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '278': {\n    container: 'webm',\n    resolution: '144p',\n    encoding: 'VP9',\n    profile: null,\n    bitrate: '0.08',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '298': {\n    container: 'mp4',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '3-3.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '299': {\n    container: 'mp4',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '5.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '302': {\n    container: 'webm',\n    resolution: '720p',\n    encoding: 'VP9',\n    profile: null,\n    bitrate: '2.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '303': {\n    container: 'webm',\n    resolution: '1080p',\n    encoding: 'VP9',\n    profile: null,\n    bitrate: '5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  // DASH (audio only)\n  '139': {\n    container: 'mp4',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 48,\n  },\n\n  '140': {\n    container: 'mp4',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '141': {\n    container: 'mp4',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 256,\n  },\n\n  '171': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 128,\n  },\n\n  '172': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  '249': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'opus',\n    audioBitrate: 50,\n  },\n  '250': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'opus',\n    audioBitrate: 70,\n  },\n  '251': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'opus',\n    audioBitrate: 160,\n  },\n\n  // Live streaming\n  '92': {\n    container: 'ts',\n    resolution: '240p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.15-0.3',\n    audioEncoding: 'aac',\n    audioBitrate: 48,\n  },\n\n  '93': {\n    container: 'ts',\n    resolution: '480p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.5-1',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '94': {\n    container: 'ts',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.8-1.25',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '95': {\n    container: 'ts',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '1.5-3',\n    audioEncoding: 'aac',\n    audioBitrate: 256,\n  },\n\n  '96': {\n    container: 'ts',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '2.5-6',\n    audioEncoding: 'aac',\n    audioBitrate: 256,\n  },\n\n  '120': {\n    container: 'flv',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'Main@L3.1',\n    bitrate: '2',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '127': {\n    container: 'ts',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '128': {\n    container: 'ts',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '132': {\n    container: 'ts',\n    resolution: '240p',\n    encoding: 'H.264',\n    profile: 'baseline',\n    bitrate: '0.15-0.2',\n    audioEncoding: 'aac',\n    audioBitrate: 48,\n  },\n\n  '151': {\n    container: 'ts',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'baseline',\n    bitrate: '0.05',\n    audioEncoding: 'aac',\n    audioBitrate: 24,\n  },\n\n};\n","/home/travis/build/npmtest/node-npmtest-ytdl-core/node_modules/ytdl-core/lib/info.js":"var urllib      = require('url');\nvar querystring = require('querystring');\nvar sax         = require('sax');\nvar request     = require('./request');\nvar util        = require('./util');\nvar sig         = require('./sig');\nvar FORMATS     = require('./formats');\n\n\nvar VIDEO_URL = 'https://www.youtube.com/watch?v=';\nvar EMBED_URL = 'https://www.youtube.com/embed/';\nvar VIDEO_EURL = 'https://youtube.googleapis.com/v/';\nvar THUMBNAIL_URL = 'https://i.ytimg.com/vi/';\nvar INFO_HOST = 'www.youtube.com';\nvar INFO_PATH = '/get_video_info';\nvar KEYS_TO_SPLIT = [\n  'keywords',\n  'fmt_list',\n  'fexp',\n  'watermark'\n];\n\n\n/**\n * Gets info from a video.\n *\n * @param {String} link\n * @param {Object} options\n * @param {Function(Error, Object)} callback\n */\nmodule.exports = function getInfo(link, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if (!options) {\n    options = {};\n  }\n  if (!callback) {\n    return new Promise(function(resolve, reject) {\n      getInfo(link, options, function(err, info) {\n        if (err) return reject(err);\n        resolve(info);\n      });\n    });\n  }\n\n  var myrequest = options.request || request;\n  var id = util.getVideoID(link);\n  if (id instanceof Error) return callback(id);\n\n  // Try getting config from the video page first.\n  var url = VIDEO_URL + id;\n  myrequest(url, options.requestOptions, function(err, body) {\n    if (err) return callback(err);\n\n    // Check if there are any errors with this video page.\n    var unavailableMsg = util.between(body, '<div id=\"player-unavailable\"', '>');\n    if (!/\\bhid\\b/.test(util.between(unavailableMsg, 'class=\"', '\"'))) {\n      // Ignore error about age restriction.\n      if (body.indexOf('<div id=\"watch7-player-age-gate-content\"') < 0) {\n        return callback(new Error(util.between(body,\n          '<h1 id=\"unavailable-message\" class=\"message\">', '</h1>').trim()));\n      }\n    }\n\n    // Parse out some additional informations since we already load that page.\n    var additional = {\n      // Get informations about the author/uploader.\n      author: util.getAuthor(body),\n\n      // Get the day the vid was published.\n      published: util.getPublished(body),\n\n      // Get description from #eow-description.\n      description: util.getVideoDescription(body),\n\n      // Get related videos.\n      related_videos: util.getRelatedVideos(body),\n\n      // Give the canonical link to the video.\n      video_url: url,\n\n      // Thumbnails.\n      iurlsd     : THUMBNAIL_URL + id + '/sddefault.jpg',\n      iurlmq     : THUMBNAIL_URL + id + '/mqdefault.jpg',\n      iurlhq     : THUMBNAIL_URL + id + '/hqdefault.jpg',\n      iurlmaxres : THUMBNAIL_URL + id + '/maxresdefault.jpg',\n    };\n\n    var jsonStr = util.between(body, 'ytplayer.config = ', '</script>');\n    if (jsonStr) {\n      jsonStr = jsonStr.slice(0, jsonStr.lastIndexOf(';ytplayer.load'));\n      var config;\n      try {\n        config = JSON.parse(jsonStr);\n      } catch (err) {\n        return callback(new Error('Error parsing config: ' + err.message));\n      }\n      if (!config) {\n        return callback(new Error('Could not parse video page config'));\n      }\n      gotConfig(id, options, additional, config, callback);\n\n    } else {\n      // If the video page doesn't work, maybe because it has mature content.\n      // and requires an account logged into view, try the embed page.\n      url = EMBED_URL + id;\n      myrequest(url, options.requestOptions, function(err, body) {\n        if (err) return callback(err);\n\n        config = util.between(body, 't.setConfig({\\'PLAYER_CONFIG\\': ', '},\\'');\n        if (!config) {\n          return callback(new Error('Could not find `player config`'));\n        }\n        try {\n          config = JSON.parse(config + '}');\n        } catch (err) {\n          return callback(new Error('Error parsing config: ' + err.message));\n        }\n        gotConfig(id, options, additional, config, callback);\n      });\n    }\n  });\n};\n\n\n/**\n * @param {Object} id\n * @param {Object} options\n * @param {Object} additional\n * @param {Object} config\n * @param {Function(Error, Object)} callback\n */\nfunction gotConfig(id, options, additional, config, callback) {\n  if (config.status === 'fail') {\n    return new Error(config.errorcode && config.reason ?\n      'Code ' + config.errorcode + ': ' + config.reason : 'Video not found');\n  }\n  var url = urllib.format({\n    protocol: 'https',\n    host: INFO_HOST,\n    pathname: INFO_PATH,\n    query: {\n      video_id: id,\n      eurl: VIDEO_EURL + id,\n      ps: 'default',\n      gl: 'US',\n      hl: 'en',\n      sts: config.sts,\n    },\n  });\n  var myrequest = options.request || request;\n  myrequest(url, options.requestOptions, function(err, body) {\n    if (err) return callback(err);\n    var info = querystring.parse(body);\n    if (info.status === 'fail') {\n      info = config.args;\n    } else if (info.requires_purchase === '1') {\n      return callback(new Error(info.ypc_video_rental_bar_text));\n    }\n\n    // Split some keys by commas.\n    KEYS_TO_SPLIT.forEach(function(key) {\n      if (!info[key]) return;\n      info[key] = info[key]\n      .split(',')\n      .filter(function(v) { return v !== ''; });\n    });\n\n    info.fmt_list = info.fmt_list ?\n      info.fmt_list.map(function(format) {\n        return format.split('/');\n      }) : [];\n\n    info.formats = util.parseFormats(info);\n\n    // Add additional properties to info.\n    info = util.objectAssign(info, additional, false);\n\n    if (info.formats.some(function(f) { return !!f.s; }) ||\n        config.args.dashmpd || info.dashmpd || info.hlsvp) {\n      var html5playerfile = urllib.resolve(VIDEO_URL, config.assets.js);\n      sig.getTokens(html5playerfile, options, function(err, tokens) {\n        if (err) return callback(err);\n\n        sig.decipherFormats(info.formats, tokens, options.debug);\n\n        var funcs = [];\n        var dashmpd;\n        if (config.args.dashmpd) {\n          dashmpd = decipherURL(config.args.dashmpd, tokens);\n          funcs.push(getDashManifest.bind(null, dashmpd, options));\n        }\n\n        if (info.dashmpd && info.dashmpd !== config.args.dashmpd) {\n          dashmpd = decipherURL(info.dashmpd, tokens);\n          funcs.push(getDashManifest.bind(null, dashmpd, options));\n        }\n\n        if (info.hlsvp) {\n          info.hlsvp = decipherURL(info.hlsvp, tokens);\n          funcs.push(getM3U8.bind(null, info.hlsvp, options));\n        }\n\n        util.parallel(funcs, function(err, results) {\n          if (err) return callback(err);\n          if (results[0]) { mergeFormats(info, results[0]); }\n          if (results[1]) { mergeFormats(info, results[1]); }\n          if (results[2]) { mergeFormats(info, results[2]); }\n          if (!info.formats.length) {\n            callback(new Error('No formats found'));\n            return;\n          }\n          if (options.debug) {\n            info.formats.forEach(function(format) {\n              var itag = format.itag;\n              if (!FORMATS[itag]) {\n                console.warn('No format metadata for itag ' + itag + ' found');\n              }\n            });\n          }\n          info.formats.sort(util.sortFormats);\n          callback(null, info);\n        });\n      });\n    } else {\n      if (!info.formats.length) {\n        callback(new Error('This video is unavailable'));\n        return;\n      }\n      sig.decipherFormats(info.formats, null, options.debug);\n      info.formats.sort(util.sortFormats);\n      callback(null, info);\n    }\n  });\n}\n\n\n/**\n * @param {String} url\n * @param {Array.<String>} tokens\n */\nfunction decipherURL(url, tokens) {\n  return url.replace(/\\/s\\/([a-fA-F0-9\\.]+)/, function(_, s) {\n    return '/signature/' + sig.decipher(tokens, s);\n  });\n}\n\n\n/**\n * Merges formats from DASH or M3U8 with formats from video info page.\n *\n * @param {Object} info\n * @param {Object} formatsMap\n */\nfunction mergeFormats(info, formatsMap) {\n  info.formats.forEach(function(f) {\n    var cf = formatsMap[f.itag];\n    if (cf) {\n      for (var key in f) { cf[key] = f[key]; }\n    } else {\n      formatsMap[f.itag] = f;\n    }\n  });\n  info.formats = [];\n  for (var itag in formatsMap) { info.formats.push(formatsMap[itag]); }\n}\n\n\n/**\n * Gets additional DASH formats.\n *\n * @param {String} url\n * @param {Object} options\n * @param {Function(!Error, Array.<Object>)} callback\n */\nfunction getDashManifest(url, options, callback) {\n  var myrequest = options.request || request;\n  var formats = {};\n  var currentFormat = null;\n  var expectUrl = false;\n\n  var parser = sax.parser(false);\n  parser.onerror = callback;\n  parser.onopentag = function(node) {\n    if (node.name === 'REPRESENTATION') {\n      var itag = node.attributes.ID;\n      var meta = FORMATS[itag];\n      currentFormat = { itag: itag };\n      for (var key in meta) {\n        currentFormat[key] = meta[key];\n      }\n      formats[itag] = currentFormat;\n    }\n    expectUrl = node.name === 'BASEURL';\n  };\n  parser.ontext = function(text) {\n    if (expectUrl) {\n      currentFormat.url = text;\n    }\n  };\n  parser.onend = function() { callback(null, formats); };\n\n  var req = myrequest(urllib.resolve(VIDEO_URL, url), options.requestOptions);\n  req.on('error', callback);\n  req.on('response', function(res) {\n    // Support for Streaming 206 status videos.\n    if (res.statusCode !== 200 && res.statusCode !== 206) {\n      // Ignore errors on manifest.\n      return parser.close();\n    }\n    res.setEncoding('utf8');\n    res.on('error', callback);\n    res.on('data', function(chunk) { parser.write(chunk); });\n    res.on('end', parser.close.bind(parser));\n  });\n}\n\n\n/**\n * Gets additional formats.\n *\n * @param {String} url\n * @param {Object} options\n * @param {Function(!Error, Array.<Object>)} callback\n */\nfunction getM3U8(url, options, callback) {\n  var myrequest = options.request || request;\n  myrequest(urllib.resolve(VIDEO_URL, url), options.requestOptions, function(err, body) {\n    if (err) return callback(err);\n\n    var formats = {};\n    body\n      .split('\\n')\n      .filter(function(line) {\n        return line.trim().length && line[0] !== '#';\n      })\n      .forEach(function(line) {\n        var itag = line.match(/\\/itag\\/(\\d+)\\//)[1];\n        if (!itag) {\n          if (options.debug) {\n            console.warn('No itag found in url ' + line);\n          }\n          return;\n        }\n        var meta = FORMATS[itag];\n        var format = { itag: itag, url: line };\n        for (var key in meta) {\n          format[key] = meta[key];\n        }\n        formats[itag] = format;\n      });\n    callback(null, formats);\n  });\n}\n","/home/travis/build/npmtest/node-npmtest-ytdl-core/node_modules/ytdl-core/lib/sig.js":"var url     = require('url');\nvar request = require('./request');\nvar cache   = require('./cache');\n\n\n/**\n * Extract signature deciphering tokens from html5player file.\n *\n * @param {String} html5playerfile\n * @param {Object} options\n * @param {Function(!Error, Array.<String>)} callback\n */\nexports.getTokens = function(html5playerfile, options, callback) {\n  var key, cachedTokens;\n  var rs = /(?:html5)?player-([a-zA-Z0-9\\-_]+)(?:\\.js|\\/)/\n    .exec(html5playerfile);\n  if (rs) {\n    key = rs[1];\n    cachedTokens = cache.get(key);\n  } else {\n    console.warn('Could not extract html5player key:', html5playerfile);\n  }\n  if (cachedTokens) {\n    callback(null, cachedTokens);\n  } else {\n    var myrequest = options.request || request;\n    myrequest(html5playerfile, options.requestOptions, function(err, body) {\n      if (err) return callback(err);\n\n      var tokens = exports.extractActions(body);\n      if (key && (!tokens || !tokens.length)) {\n        callback(new Error('Could not extract signature deciphering actions'));\n        return;\n      }\n\n      cache.set(key, tokens);\n      callback(null, tokens);\n    });\n  }\n};\n\n\n/**\n * Decipher a signature based on action tokens.\n *\n * @param {Array.<String>} tokens\n * @param {String} sig\n * @return {String}\n */\nexports.decipher = function(tokens, sig) {\n  sig = sig.split('');\n  var pos;\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    var token = tokens[i];\n    switch (token[0]) {\n    case 'r':\n      sig = sig.reverse();\n      break;\n    case 'w':\n      pos = ~~token.slice(1);\n      sig = swapHeadAndPosition(sig, pos);\n      break;\n    case 's':\n      pos = ~~token.slice(1);\n      sig = sig.slice(pos);\n      break;\n    case 'p':\n      pos = ~~token.slice(1);\n      sig.splice(0, pos);\n      break;\n    }\n  }\n  return sig.join('');\n};\n\n\n/**\n * Swaps the first element of an array with one of given position.\n *\n * @param {Array.<Object>} arr\n * @param {Number} position\n * @return {Array.<Object>}\n */\nfunction swapHeadAndPosition(arr, position) {\n  var first = arr[0];\n  arr[0] = arr[position % arr.length];\n  arr[position] = first;\n  return arr;\n}\n\n\nvar jsvarStr = '[a-zA-Z_\\\\$][a-zA-Z_0-9]*';\nvar reverseStr = ':function\\\\(a\\\\)\\\\{' +\n  '(?:return )?a\\\\.reverse\\\\(\\\\)' +\n'\\\\}';\nvar sliceStr = ':function\\\\(a,b\\\\)\\\\{' +\n  'return a\\\\.slice\\\\(b\\\\)' +\n'\\\\}';\nvar spliceStr = ':function\\\\(a,b\\\\)\\\\{' +\n  'a\\\\.splice\\\\(0,b\\\\)' +\n'\\\\}';\nvar swapStr = ':function\\\\(a,b\\\\)\\\\{' +\n  'var c=a\\\\[0\\\\];a\\\\[0\\\\]=a\\\\[b%a\\\\.length\\\\];a\\\\[b\\\\]=c(?:;return a)?' +\n'\\\\}';\nvar actionsObjRegexp = new RegExp(\n  'var (' + jsvarStr + ')=\\\\{((?:(?:' +\n    jsvarStr + reverseStr + '|' +\n    jsvarStr + sliceStr   + '|' +\n    jsvarStr + spliceStr  + '|' +\n    jsvarStr + swapStr +\n  '),?\\\\n?)+)\\\\};'\n);\nvar actionsFuncRegexp = new RegExp('function(?: ' + jsvarStr + ')?\\\\(a\\\\)\\\\{' +\n    'a=a\\\\.split\\\\(\"\"\\\\);\\\\s*' +\n    '((?:(?:a=)?' + jsvarStr + '\\\\.' + jsvarStr + '\\\\(a,\\\\d+\\\\);)+)' +\n    'return a\\\\.join\\\\(\"\"\\\\)' +\n  '\\\\}'\n);\nvar reverseRegexp = new RegExp('(?:^|,)(' + jsvarStr + ')' + reverseStr, 'm');\nvar sliceRegexp   = new RegExp('(?:^|,)(' + jsvarStr + ')' + sliceStr, 'm');\nvar spliceRegexp  = new RegExp('(?:^|,)(' + jsvarStr + ')' + spliceStr, 'm');\nvar swapRegexp    = new RegExp('(?:^|,)(' + jsvarStr + ')' + swapStr, 'm');\n\n\n/**\n * Extracts the actions that should be taken to decipher a signature.\n *\n * This searches for a function that performs string manipulations on\n * the signature. We already know what the 3 possible changes to a signature\n * are in order to decipher it. There is\n *\n * * Reversing the string.\n * * Removing a number of characters from the beginning.\n * * Swapping the first character with another position.\n *\n * Note, `Array#slice()` used to be used instead of `Array#splice()`,\n * it's kept in case we encounter any older html5player files.\n *\n * After retrieving the function that does this, we can see what actions\n * it takes on  a signature.\n *\n * @param {String} body\n * @return {Array.<String>}\n */\nexports.extractActions = function(body) {\n  var objResult = actionsObjRegexp.exec(body);\n  var funcResult = actionsFuncRegexp.exec(body);\n  if (!objResult || !funcResult) { return null; }\n\n  var obj      = objResult[1].replace(/\\$/g, '\\\\$');\n  var objBody  = objResult[2].replace(/\\$/g, '\\\\$');\n  var funcbody = funcResult[1].replace(/\\$/g, '\\\\$');\n\n  var result = reverseRegexp.exec(objBody);\n  var reverseKey = result && result[1].replace(/\\$/g, '\\\\$');\n  result = sliceRegexp.exec(objBody);\n  var sliceKey = result && result[1].replace(/\\$/g, '\\\\$');\n  result = spliceRegexp.exec(objBody);\n  var spliceKey = result && result[1].replace(/\\$/g, '\\\\$');\n  result = swapRegexp.exec(objBody);\n  var swapKey = result && result[1].replace(/\\$/g, '\\\\$');\n\n  var myreg = '(?:a=)?' + obj + '\\\\.(' +\n    [reverseKey, sliceKey, spliceKey, swapKey].join('|') + ')\\\\(a,(\\\\d+)\\\\)';\n  var tokenizeRegexp = new RegExp(myreg, 'g');\n  var tokens = [];\n  while ((result = tokenizeRegexp.exec(funcbody)) !== null) {\n    switch (result[1]) {\n    case swapKey:\n      tokens.push('w' + result[2]);\n      break;\n    case reverseKey:\n      tokens.push('r');\n      break;\n    case sliceKey:\n      tokens.push('s' + result[2]);\n      break;\n    case spliceKey:\n      tokens.push('p' + result[2]);\n      break;\n    }\n  }\n  return tokens;\n};\n\n\n/**\n * @param {Object} format\n * @param {String} sig\n * @param {Boolean} debug\n */\nexports.setDownloadURL = function(format, sig, debug) {\n  var decodedUrl;\n  if (format.url) {\n    decodedUrl = format.url;\n  } else {\n    if (debug) {\n      console.warn('Download url not found for itag ' + format.itag);\n    }\n    return;\n  }\n\n  try {\n    decodedUrl = decodeURIComponent(decodedUrl);\n  } catch (err) {\n    if (debug) {\n      console.warn('Could not decode url: ' + err.message);\n    }\n    return;\n  }\n\n  // Make some adjustments to the final url.\n  var parsedUrl = url.parse(decodedUrl, true);\n\n  // Deleting the `search` part is necessary otherwise changes to\n  // `query` won't reflect when running `url.format()`\n  delete parsedUrl.search;\n\n  var query = parsedUrl.query;\n\n  // This is needed for a speedier download.\n  // See https://github.com/fent/node-ytdl-core/issues/127\n  query.ratebypass = 'yes';\n  if (sig) {\n    query.signature = sig;\n  }\n\n  format.url = url.format(parsedUrl);\n};\n\n\n/**\n * Applies `sig.decipher()` to all format URL's.\n *\n * @param {Array.<Object>} formats\n * @param {Array.<String>} tokens\n * @param {Boolean} debug\n */\nexports.decipherFormats = function(formats, tokens, debug) {\n  formats.forEach(function(format) {\n    var sig = tokens && format.s ? exports.decipher(tokens, format.s) : null;\n    exports.setDownloadURL(format, sig, debug);\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-ytdl-core/node_modules/ytdl-core/lib/cache.js":"// A cache to keep track of html5player tokens, so that we don't request\n// these static files from Youtube and parse them every time a video\n// needs the same one.\n//\n// The cache is very simplistic, shared, and it only needs get and set.\nexports.store = {};\n\n\n/**\n * @param {String} key\n * @param {Object} value\n */\nexports.set = function(key, value) {\n  exports.store[key] = value;\n};\n\n\n/**\n * @param {String} key\n * @return {Object}\n */\nexports.get = function(key) {\n  return exports.store[key];\n};\n\n\n/**\n * Empties the cache.\n */\nexports.reset = function() {\n  exports.store = {};\n};\n"}